---
const { user } = Astro.locals;
if (user == null) {
  return Astro.redirect("/admin/signin");
}
const priorityOrder: { [key: string]: number } = {
  alta: 1,
  Alta: 2,
  media: 3,
  Media: 4,
  baja: 5,
  Baja: 6,
};

import { db, tickets, eq } from "astro:db";
import CardComponent from "@/adminComponents/CardComponent.astro";
import MainLayout from "@/layouts/MainLayout.astro";
import type { ticket } from "lib/models";

const allTickets = await db.select().from(tickets).where(eq(tickets.ticketState, 'Resuelto'));

const sortedTickets = allTickets.sort((a:ticket, b:ticket) => {
  return (priorityOrder[a.ticketInfo.prioridad] || 7) - (priorityOrder[b.ticketInfo.prioridad] || 7);
});

---
<MainLayout w_header>
  <div class="container mx-auto px-4">
    <div class="text-center mb-8">
        <h1 class="text-3xl font-bold">
          Ver
          <span
            class={`mt-10 inline-flex items-center px-3 py-1 text-md font-medium rounded-full cursor-pointer text-white bg-blue-500`}
          >
            Resueltos
          </span>
        </h1>
      </div>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      {sortedTickets.map(ticket => (
        <a href={`/admin/ticket/${ticket.ticketNumber}`}>
          <CardComponent ticket={ticket} />
        </a>
      ))}
    </div>
  </div>
</MainLayout>

<style>
  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 16px;
    padding: 16px;
  }
  .card {
    border: 1px solid #ccc;
    border-radius: 8px;
    padding: 16px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    background-color: #a29d9d;
  }
  .card h1 {
    font-size: 24px;
    margin: 0;
  }
  .card h2 {
    font-size: 18px;
    margin: 8px 0 0 0;
  }
  .card p {
    font-size: 14px;
    margin: 8px 0 0 0;
  }
  /* AÃ±adido para centrar el encabezado */
  .text-center {
    text-align: center;
  }
  .mb-8 {
    margin-bottom: 2rem;
  }
  .text-3xl {
    font-size: 1.875rem;
  }
  .font-bold {
    font-weight: 700;
  }
</style>
